generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x"]
}


datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model students {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(191)
  email     String?  @db.VarChar(191)
  password   String?   @db.VarChar(191)
  status    Int      @default(1) @db.TinyInt
  created_at DateTime @default(now()) @db.DateTime(3)
  updated_at DateTime? @db.DateTime(3)

  comments   comments[]
  post_viewed post_viewed[]
}

model teachers {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(191)
  email     String?  @db.VarChar(191)
  password   String?   @db.VarChar(191)
  status    Int      @default(1) @db.TinyInt
  created_at DateTime @default(now()) @db.DateTime(3)
  updated_at DateTime? @db.DateTime(3)

  posts  posts[]
  teacher_subjects teacher_subjects[]
  comments    comments[]
}

model subjects {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(191)
  status    Int      @default(1) @db.TinyInt
  created_at DateTime @default(now()) @db.DateTime(3)
  updated_at DateTime? @db.DateTime(3)

  teacher_subjects teacher_subjects[]
}

model teacher_subjects {
  id         Int      @id @default(autoincrement())
  teacher_id Int
  subject_id Int
  status     Int      @default(1) @db.TinyInt
  created_at DateTime @default(now()) @db.DateTime(3)
  updated_at DateTime? @db.DateTime(3)

  teacher    teachers @relation(fields: [teacher_id], references: [id])
  subject    subjects @relation(fields: [subject_id], references: [id])

  @@index([teacher_id])
  @@index([subject_id])
}

model tags {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(191)
  status    Int      @default(1) @db.TinyInt
  created_at DateTime @default(now()) @db.DateTime(3)
  updated_at DateTime? @db.DateTime(3)

  post_tags post_tags[]
}

model posts {
  id         Int      @id @default(autoincrement())
  teacher_id Int
  title      String   @db.VarChar(50)
  content    String   @db.LongText
  status    Int      @default(1) @db.TinyInt
  created_at DateTime @default(now()) @db.DateTime(3)
  updated_at DateTime? @db.DateTime(3)

  teacher    teachers @relation(fields: [teacher_id], references: [id])
  post_tags  post_tags[]
  media      media[]
  post_viewed post_viewed[]
  comments   comments[]

  @@index([teacher_id])
}

model post_viewed {
  id         Int      @id @default(autoincrement())
  student_id Int
  post_id    Int
  created_at DateTime @default(now()) @db.DateTime(3)

  student    students @relation(fields: [student_id], references: [id])
  post       posts    @relation(fields: [post_id], references: [id])

  @@index([student_id])
  @@index([post_id])
  @@unique([student_id, post_id, created_at])
}


model post_tags {
  id      Int    @id @default(autoincrement())
  post_id Int
  tag_id  Int
  status    Int      @default(1) @db.TinyInt
  created_at DateTime @default(now()) @db.DateTime(3)
  updated_at DateTime? @db.DateTime(3)

  post    posts @relation(fields: [post_id], references: [id])
  tag     tags  @relation(fields: [tag_id], references: [id])

  @@index([post_id])
  @@index([tag_id])
}

model media {
  id         Int      @id @default(autoincrement())
  post_id    Int
  name       String   @db.VarChar(255)
  path       String   @db.Text
  status     Int      @default(1) @db.TinyInt
  created_at DateTime @default(now()) @db.DateTime(3)
  updated_at DateTime? @db.DateTime(3)

  post       posts    @relation(fields: [post_id], references: [id])

  @@index([post_id])
}

model comments {
  id         Int      @id @default(autoincrement())
  post_id    Int
  student_id Int?     
  teacher_id Int?     
  content    String   @db.Text
  status     Int      @default(1) @db.TinyInt
  created_at DateTime @default(now()) @db.DateTime(3)
  updated_at DateTime @updatedAt @db.DateTime(3)

  post       posts    @relation(fields: [post_id], references: [id])
  student    students? @relation(fields: [student_id], references: [id])
  teacher    teachers? @relation(fields: [teacher_id], references: [id])

  @@index([post_id])
  @@index([student_id])
  @@index([teacher_id])
}

